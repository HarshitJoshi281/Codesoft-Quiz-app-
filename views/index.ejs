<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Quiz Portal</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #4361ee;
      --primary-dark: #3a0ca3;
      --accent: #4cc9f0;
      --light: #f8f9fa;
      --dark: #212529;
      --white: rgba(255, 255, 255, 0.9);
      --border-radius: 12px;
      --shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      --transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    html, body {
      height: 100%;
      font-family: 'Poppins', sans-serif;
      overflow: hidden;
    }

    .back {
      height: 100vh;
      width: 100vw;
      object-fit: cover;
      position: fixed;
      top: 0;
      left: 0;
      z-index: -1;
      filter: brightness(0.6);
    }

    .container {
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 3rem;
      padding: 2rem;
      text-align: center;
    }

    h1 {
      color: var(--white);
      font-size: 4rem;
      font-weight: 700;
      text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
      margin-bottom: 1rem;
      background: linear-gradient(to right, var(--white), var(--accent));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      animation: fadeIn 1s ease-out;
    }

    .btn-container {
      display: flex;
      gap: 2rem;
      flex-wrap: wrap;
      justify-content: center;
      animation: slideUp 0.8s ease-out;
    }

    .btn {
      padding: 1.2rem 2.5rem;
      font-size: 1.2rem;
      border: none;
      border-radius: var(--border-radius);
      cursor: pointer;
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(10px);
      color: var(--white);
      font-weight: 600;
      transition: var(--transition);
      text-decoration: none;
      border: 2px solid rgba(255, 255, 255, 0.2);
      box-shadow: var(--shadow);
      min-width: 220px;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: 0.5s;
    }

    .btn:hover {
      transform: translateY(-5px) scale(1.03);
      background: rgba(255, 255, 255, 0.25);
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn:active {
      transform: translateY(-2px) scale(1.01);
    }

    .particles {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes slideUp {
      from { opacity: 0; transform: translateY(40px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @media (max-width: 768px) {
      h1 {
        font-size: 2.5rem;
      }
      
      .btn-container {
        flex-direction: column;
        gap: 1.5rem;
      }
      
      .btn {
        padding: 1rem 2rem;
        font-size: 1rem;
      }
    }
  </style>
</head>
<body>

  <img class="back" src="\back.jpg" alt="Background Image">
  <canvas class="particles" id="particles"></canvas>

  <div class="container">
    <h1>Welcome To Quiz Portal</h1>
    <div class="btn-container">
      <button class="btn">Create Quiz</button>
      <button class="btn">Join Quiz</button>
    </div>
  </div>

  <script>
   
    document.querySelectorAll(".btn")[0].addEventListener("click", () => {
      window.location.href = "/signin"; 
    });
    
    document.querySelectorAll(".btn")[1].addEventListener("click", () => {
      window.location.href = "/signinj"; 
    });

   
    const canvas = document.getElementById('particles');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const particles = [];
    const particleCount = window.innerWidth < 768 ? 30 : 60;

    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 3 + 1;
        this.speedX = Math.random() * 1 - 0.5;
        this.speedY = Math.random() * 1 - 0.5;
        this.opacity = Math.random() * 0.6 + 0.1;
      }

      update() {
        this.x += this.speedX;
        this.y += this.speedY;

        if (this.x > canvas.width || this.x < 0) this.speedX *= -1;
        if (this.y > canvas.height || this.y < 0) this.speedY *= -1;
      }

      draw() {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;
        ctx.fill();
      }
    }

    function init() {
      for (let i = 0; i < particleCount; i++) {
        particles.push(new Particle());
      }
    }

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      for (let i = 0; i < particles.length; i++) {
        particles[i].update();
        particles[i].draw();
      }
      
      connectParticles();
      requestAnimationFrame(animate);
    }

    function connectParticles() {
      for (let a = 0; a < particles.length; a++) {
        for (let b = a; b < particles.length; b++) {
          const dx = particles[a].x - particles[b].x;
          const dy = particles[a].y - particles[b].y;
          const distance = Math.sqrt(dx * dx + dy * dy);

          if (distance < 100) {
            ctx.strokeStyle = `rgba(255, 255, 255, ${1 - distance/100})`;
            ctx.lineWidth = 0.5;
            ctx.beginPath();
            ctx.moveTo(particles[a].x, particles[a].y);
            ctx.lineTo(particles[b].x, particles[b].y);
            ctx.stroke();
          }
        }
      }
    }

    window.addEventListener('resize', () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });

    init();
    animate();
  </script>
</body>
</html>